#!/usr/bin/python2.6 -W ignore::DeprecationWarning
# -*- coding: utf-8 -*-

import SOAPpy
import SOAPpy.Types
import getpass
import datetime
import time
import sys 
import random

fixVersionId = '22498'

reviewers = [
        'bach',
	'aandrosov',
	'hexode',
	'rebulus',
	'rikishi',
	'shevnv',
	'shirokoff',
	'smoogly',
	'yeee737'
]

# Рома тоже может ревьюить статику
extendedReviewers = list(reviewers)
extendedReviewers.append('kizu')
extendedReviewers.append('moodruck')

whoami = getpass.getuser()
print "You are", whoami

# удаляем себя из reviewers
try:
	userIndex = reviewers.index(whoami)
	reviewers.pop(userIndex)
except:
	pass

names = [
	"Золотко",
	"Зайчик",
	"Боец",
    "Пупсик",
    "Милый",
    "Лапочка"
]

def addComment(task, predefinedReviewer ):
	
	# выбираем reviewer
	if predefinedReviewer is None:
                reviewer = random.choice (reviewers)
        elif predefinedReviewer in extendedReviewers:
                reviewer = predefinedReviewer
        else:
                print "Reviewer " + predefinedReviewer + " is unknown!"
                sys.exit(2)


	jiraConnectionString = "jira-robot.yandex-team.ru"
	soap = SOAPpy.WSDL.Proxy('https://'+jiraConnectionString+'/rpc/soap/jirasoapservice-v2?wsdl')
	auth = soap.login('wmi-zomb', 'pheiH1ah')

	actions = soap.getAvailableActions(auth, task)
	if actions == None:
		print "Can't fetch availble action for", task
                sys.exit(1)
	
	inReviewActionId = False
	for action in actions:
		if action.id == '361' or action.id == '351':
			inReviewActionId = action.id
	
	if inReviewActionId == False:
		print "Can't do In Review. There is no such action for this task!"
		sys.exit(1)
	
	# добавляем "Релизный Столб"
	issue = soap.getIssue(auth, task)
	fixVersions = []
	for fixVersion in issue.fixVersions:
		fixVersions.append(fixVersion.id)

	# если нет такого fixVersion, то добавляем
	try:
        	fixVersions.index(fixVersionId)
	except:
        	fixVersions.append(fixVersionId)

	soap.progressWorkflowAction(auth, task, inReviewActionId)
	soap.updateIssue(auth, task, [
		{"id": "assignee", "values": reviewer },
		{"id": "fixVersions", "values": fixVersions }
	])
	print ""
	print "DONE!"
	print "Задача назначена на", reviewer
	print random.choice(names) + ", открой https://jira.yandex-team.ru/browse/" + task + " и добавь туда информацию про ветку или коммит."
	print "Не забудь проверить fixVersion, по умолчанию задача ставится на 'Релизный Столб'"
	print ""
	return ""

def usage():
    print "Usage: "+sys.argv[0]+" <task id(DARIA-12345)> <reviewer(shirokoff)>"

if len(sys.argv)!=2 and len(sys.argv)!=3: 
    usage() 
    sys.exit()


predefinedReviewer = None
if len(sys.argv) == 3:
    predefinedReviewer = sys.argv[2]

addComment(sys.argv[1], predefinedReviewer)

